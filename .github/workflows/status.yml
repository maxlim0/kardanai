name: Status Check Pipeline

on:
  repository_dispatch:
    types: [docker-container-status]

jobs:
  cloud-init-status:
    if: false
    name: Check Cloud Init Status
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch' && github.event.action == 'cloud-init-status'
    steps:
      - name: Get Cloud Init Status
        run: |
          if [ "${{ github.event.client_payload.status }}" == "ready" ]; then
            echo "Cloud init completed successfully"
          else
            echo "Cloud init failed"
            exit 1
          fi

  docker-container-status:
    name: Check Docker Container Status and Collect Logs
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch' && github.event.action == 'docker-container-status'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Docker Container Status
        run: |
          if [ "${{ github.event.client_payload.status }}" == "completed" ]; then
            echo "Docker container completed successfully"
          else
            echo "Docker container failed"
            exit 1
          fi

      - name: Save Logs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: container-logs
          path: "${{ github.event.client_payload.log_path }}"

  cleanup:
    name: Delete Droplet
    needs: [docker-container-status, cloud-init-status]
    if: |
      always() &&
      (contains(needs.*.result, 'failure') ||
      (contains(needs.*.result, 'success') && contains(needs.*.result, 'skipped') == false))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        run: |
          sudo snap install doctl
  
      - name: Authenticate doctl
        run: doctl auth init -t "${{ secrets.DIGITALOCEAN_TOKEN }}"

      - name: Delete Droplet
        run: |
          doctl compute droplet delete $(doctl compute d list | awk 'NR > 1 {print $3}') --force